# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "wgpu"
version = "0.12.0"
authors = ["wgpu developers"]
exclude = ["etc/**/*", "examples/**/*.png", "examples/**/*.dds", "examples/**/*.ktx2", "examples/**/*.mtl", "examples/**/*.obj", "tests/**/*", "Cargo.lock", "target/**/*"]
autotests = false
description = "Rusty WebGPU API wrapper"
homepage = "https://wgpu.rs/"
keywords = ["graphics"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/gfx-rs/wgpu/tree/v0.12"
resolver = "2"
[package.metadata.docs.rs]
all-features = true

[lib]

[[example]]
name = "boids"
test = true

[[example]]
name = "bunnymark"
test = true

[[example]]
name = "conservative-raster"
test = true

[[example]]
name = "cube"
test = true

[[example]]
name = "hello-compute"
test = true

[[example]]
name = "mipmap"
test = true

[[example]]
name = "msaa-line"
test = true

[[example]]
name = "shadow"
test = true

[[example]]
name = "skybox"
test = true

[[example]]
name = "texture-arrays"
test = true
required-features = ["spirv"]

[[example]]
name = "water"
test = true

[[test]]
name = "wgpu-tests"
path = "tests/root.rs"
[dependencies.arrayvec]
version = "0.7"

[dependencies.log]
version = "0.4"

[dependencies.naga]
version = "0.8"
optional = true

[dependencies.parking_lot]
version = "0.11"

[dependencies.raw-window-handle]
version = "0.4"

[dependencies.serde]
version = "1"
features = ["derive"]
optional = true

[dependencies.smallvec]
version = "1"

[dependencies.wgt]
version = "0.12"
package = "wgpu-types"
[dev-dependencies.bitflags]
version = "1"

[dev-dependencies.bytemuck]
version = "1.4"
features = ["derive"]

[dev-dependencies.cgmath]
version = "0.18"

[dev-dependencies.ddsfile]
version = "0.4"

[dev-dependencies.log]
version = "0.4"

[dev-dependencies.naga]
version = "0.8"
features = ["wgsl-in"]

[dev-dependencies.noise]
version = "0.7"
default-features = false

[dev-dependencies.obj]
version = "0.10"

[dev-dependencies.png]
version = "0.16"

[dev-dependencies.rand]
version = "0.7.2"

[dev-dependencies.winit]
version = "0.26"

[features]
angle = ["wgc/angle"]
default = []
glsl = ["naga/glsl-in"]
replay = ["serde", "wgc/replay"]
spirv = ["naga/spv-in"]
trace = ["serde", "wgc/trace"]
webgl = ["wgc"]
[target."cfg(not(target_arch = \"wasm32\"))".dependencies.hal]
version = "0.12"
package = "wgpu-hal"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.wgc]
version = "0.12"
features = ["raw-window-handle"]
package = "wgpu-core"
[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.async-executor]
version = "1.0"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.env_logger]
version = "0.8"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.pollster]
version = "0.2"
[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3.50"

[target."cfg(target_arch = \"wasm32\")".dependencies.naga]
version = "0.8"
features = ["wgsl-out"]

[target."cfg(target_arch = \"wasm32\")".dependencies.parking_lot]
version = "0.11"
features = ["wasm-bindgen"]

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.76"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen-futures]
version = "0.4.23"

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.53"
features = ["Document", "Navigator", "Node", "NodeList", "Gpu", "GpuAdapter", "GpuAddressMode", "GpuBindGroup", "GpuBindGroupDescriptor", "GpuBindGroupEntry", "GpuBindGroupLayout", "GpuBindGroupLayoutDescriptor", "GpuBindGroupLayoutEntry", "GpuBlendComponent", "GpuBlendFactor", "GpuBlendOperation", "GpuBlendState", "GpuBuffer", "GpuBufferBinding", "GpuBufferBindingLayout", "GpuBufferBindingType", "GpuBufferDescriptor", "GpuBufferUsage", "GpuCanvasContext", "GpuCanvasConfiguration", "GpuColorDict", "GpuColorTargetState", "GpuColorWrite", "GpuCommandBuffer", "GpuCommandBufferDescriptor", "GpuCommandEncoder", "GpuCommandEncoderDescriptor", "GpuCompareFunction", "GpuCompilationInfo", "GpuCompilationMessage", "GpuCompilationMessageType", "GpuComputePassDescriptor", "GpuComputePassEncoder", "GpuComputePipeline", "GpuComputePipelineDescriptor", "GpuCullMode", "GpuDepthStencilState", "GpuDevice", "GpuDeviceDescriptor", "GpuDeviceLostInfo", "GpuDeviceLostReason", "GpuErrorFilter", "GpuExtent3dDict", "GpuFeatureName", "GpuFilterMode", "GpuFragmentState", "GpuFrontFace", "GpuImageCopyBuffer", "GpuImageCopyTexture", "GpuImageDataLayout", "GpuIndexFormat", "GpuLoadOp", "GpuMapMode", "GpuMultisampleState", "GpuObjectDescriptorBase", "GpuOrigin2dDict", "GpuOrigin3dDict", "GpuOutOfMemoryError", "GpuPipelineDescriptorBase", "GpuPipelineLayout", "GpuPipelineLayoutDescriptor", "GpuPipelineStatisticName", "GpuPowerPreference", "GpuPrimitiveState", "GpuPrimitiveTopology", "GpuProgrammableStage", "GpuQuerySet", "GpuQuerySetDescriptor", "GpuQueryType", "GpuQueue", "GpuRenderBundle", "GpuRenderBundleDescriptor", "GpuRenderBundleEncoder", "GpuRenderBundleEncoderDescriptor", "GpuRenderPassColorAttachment", "GpuRenderPassDepthStencilAttachment", "GpuRenderPassDescriptor", "GpuRenderPassEncoder", "GpuRenderPipeline", "GpuRenderPipelineDescriptor", "GpuRequestAdapterOptions", "GpuSampler", "GpuSamplerBindingLayout", "GpuSamplerBindingType", "GpuSamplerDescriptor", "GpuShaderModule", "GpuShaderModuleDescriptor", "GpuShaderStage", "GpuStencilFaceState", "GpuStencilOperation", "GpuStorageTextureAccess", "GpuStorageTextureBindingLayout", "GpuStoreOp", "GpuSupportedFeatures", "GpuSupportedLimits", "GpuTexture", "GpuTextureAspect", "GpuTextureBindingLayout", "GpuTextureDescriptor", "GpuTextureDimension", "GpuTextureFormat", "GpuTextureSampleType", "GpuTextureUsage", "GpuTextureView", "GpuTextureViewDescriptor", "GpuTextureViewDimension", "GpuUncapturedErrorEvent", "GpuUncapturedErrorEventInit", "GpuValidationError", "GpuVertexAttribute", "GpuVertexBufferLayout", "GpuVertexFormat", "GpuVertexState", "GpuVertexStepMode", "HtmlCanvasElement", "OffscreenCanvas", "Window"]

[target."cfg(target_arch = \"wasm32\")".dependencies.wgc]
version = "0.12"
features = ["raw-window-handle"]
optional = true
package = "wgpu-core"
[target."cfg(target_arch = \"wasm32\")".dev-dependencies.console_error_panic_hook]
version = "0.1.6"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.console_log]
version = "0.1.2"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.rand]
version = "0.7"
features = ["wasm-bindgen"]

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.web-sys]
version = "0.3.53"
features = ["Location"]
